// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Database.Data;

namespace WebApplication.Migrations
{
    [DbContext(typeof(ScrumContext))]
    partial class ScrumContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("WebApplication.Database.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId");

                    b.ToTable("Group");

                    b.HasData(
                        new
                        {
                            GroupId = -1
                        },
                        new
                        {
                            GroupId = 1
                        });
                });

            modelBuilder.Entity("WebApplication.Database.Models.GroupMember", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupRole")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username1")
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.HasIndex("GroupId");

                    b.HasIndex("Username1");

                    b.ToTable("GroupMember");
                });

            modelBuilder.Entity("WebApplication.Database.Models.MeetingNotes", b =>
                {
                    b.Property<int>("MeetingNotesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DailyMeeting")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanningMeeting")
                        .HasColumnType("TEXT");

                    b.Property<string>("RetrospectiveMeeting")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewMeeting")
                        .HasColumnType("TEXT");

                    b.Property<int>("SprintId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MeetingNotesId");

                    b.HasIndex("SprintId")
                        .IsUnique();

                    b.ToTable("MeetingNote");
                });

            modelBuilder.Entity("WebApplication.Database.Models.ProductBacklog", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId");

                    b.ToTable("ProductBacklog");

                    b.HasData(
                        new
                        {
                            GroupId = -1
                        });
                });

            modelBuilder.Entity("WebApplication.Database.Models.Sprint", b =>
                {
                    b.Property<int>("SprintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SprintListGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SprintNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("SprintId");

                    b.HasIndex("SprintListGroupId");

                    b.ToTable("Sprint");

                    b.HasData(
                        new
                        {
                            SprintId = 1,
                            GroupId = 1,
                            SprintNumber = 1
                        },
                        new
                        {
                            SprintId = -1,
                            GroupId = -1,
                            SprintNumber = 1
                        });
                });

            modelBuilder.Entity("WebApplication.Database.Models.SprintList", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfSprints")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroupId");

                    b.ToTable("SprintList");

                    b.HasData(
                        new
                        {
                            GroupId = -1,
                            Duration = 0,
                            NumberOfSprints = 0
                        });
                });

            modelBuilder.Entity("WebApplication.Database.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoryPoint")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaskMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserStoryStoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskId");

                    b.HasIndex("UserStoryStoryId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("WebApplication.Database.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT")
                        .HasMaxLength(18);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(18);

                    b.HasKey("Username");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Username = "dave",
                            Password = "admin1"
                        },
                        new
                        {
                            Username = "jaime",
                            Password = "admin2"
                        });
                });

            modelBuilder.Entity("WebApplication.Database.Models.UserStory", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CurrentlyActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductBacklogGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SprintId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Story")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StoryPoint")
                        .HasColumnType("INTEGER");

                    b.HasKey("StoryId");

                    b.HasIndex("ProductBacklogGroupId");

                    b.HasIndex("SprintId");

                    b.ToTable("UserStory");

                    b.HasData(
                        new
                        {
                            StoryId = 1,
                            Completed = false,
                            CurrentlyActive = false,
                            GroupId = 1,
                            SprintId = -1,
                            Story = "As a role I want smth to goal",
                            StoryPoint = 3
                        });
                });

            modelBuilder.Entity("WebApplication.Database.Models.GroupMember", b =>
                {
                    b.HasOne("WebApplication.Database.Models.Group", null)
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Username1");
                });

            modelBuilder.Entity("WebApplication.Database.Models.MeetingNotes", b =>
                {
                    b.HasOne("WebApplication.Database.Models.Sprint", null)
                        .WithOne("MeetingNotes")
                        .HasForeignKey("WebApplication.Database.Models.MeetingNotes", "SprintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication.Database.Models.ProductBacklog", b =>
                {
                    b.HasOne("WebApplication.Database.Models.Group", null)
                        .WithOne("ProductBacklog")
                        .HasForeignKey("WebApplication.Database.Models.ProductBacklog", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication.Database.Models.Sprint", b =>
                {
                    b.HasOne("WebApplication.Database.Models.SprintList", null)
                        .WithMany("Sprints")
                        .HasForeignKey("SprintListGroupId");
                });

            modelBuilder.Entity("WebApplication.Database.Models.SprintList", b =>
                {
                    b.HasOne("WebApplication.Database.Models.Group", null)
                        .WithOne("SprintList")
                        .HasForeignKey("WebApplication.Database.Models.SprintList", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication.Database.Models.Task", b =>
                {
                    b.HasOne("WebApplication.Database.Models.UserStory", null)
                        .WithMany("Tasks")
                        .HasForeignKey("UserStoryStoryId");
                });

            modelBuilder.Entity("WebApplication.Database.Models.UserStory", b =>
                {
                    b.HasOne("WebApplication.Database.Models.ProductBacklog", null)
                        .WithMany("UserStories")
                        .HasForeignKey("ProductBacklogGroupId");

                    b.HasOne("WebApplication.Database.Models.Sprint", null)
                        .WithMany("UserStories")
                        .HasForeignKey("SprintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
